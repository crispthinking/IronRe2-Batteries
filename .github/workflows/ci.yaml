name: Build RE2/cre2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  workflow_call:  # Allows the workflow to be called by other workflows

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest] #macOS13 is intel based
    runs-on: ${{matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
     
      # -----------------------------
      # Linux-specific steps
      # -----------------------------
      - name: Setup .NET (Linux)
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install Dependencies (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake jq libgtest-dev libbenchmark-dev

      - name: Build Abseil from source (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          git clone https://github.com/abseil/abseil-cpp.git
          cd abseil-cpp
          git checkout $(cat $GITHUB_WORKSPACE/thirdparty/re2/ABSEIL_REVISION)
          mkdir build && cd build
          cmake .. -DCMAKE_CXX_STANDARD=17 -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=/usr/local
          sudo cmake --build . --parallel $(nproc) --target install

      - name: Run Build Script (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: ./build.sh
        env:
          CMAKE_PREFIX_PATH: "/usr/local"

      - name: Upload Artifacts (Linux)
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-linux
          path: bin/artifacts/
      
      # -----------------------------
      # macOS-specific steps
      # -----------------------------

      - name: Install Dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          # Update native ARM Homebrew (default at /opt/homebrew)
          brew update
          brew install gitversion nuget
          brew install abseil googletest google-benchmark

          # Now use Intel Homebrew for the x86_64 versions
          if [ -x /usr/local/bin/brew ]; then
            arch -x86_64 /usr/local/bin/brew update
            arch -x86_64 /usr/local/bin/brew install abseil googletest google-benchmark
          fi


      - name: Run Build Script (macOS)
        if: matrix.os == 'macos-latest'
        run: ./build.sh

      - name: Upload Artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-macos
          path: bin/artifacts/
      
      # -----------------------------
      # Windows-specific steps
      # -----------------------------
      - name: Install Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          choco install gitversion.portable -y
          choco install jq -y
          vcpkg install abseil:x64-windows-static

      - name: Run Build Script (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: build.bat

      - name: Upload Artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-windows
          path: bin/artifacts/
