name: CI

# Trigger on pushes and pull requests to the main branch.
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Set permissions for the workflow.
permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  Linux:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang jq

      - name: Install GitVersion Tool
        run: dotnet tool install -g GitVersion.Tool

      - name: Add .dotnet Tools to PATH
        run: echo "${HOME}/.dotnet/tools" >> $GITHUB_PATH

      - name: Run Build Script
        run: ./build.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: bin/artifacts/

  macOS:
    name: macOS Build
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Dependencies via Homebrew
        run: |
          brew update
          brew install gitversion jq nuget
          brew install abseil googletest google-benchmark
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:/opt/homebrew/lib/pkgconfig"

      - name: Run Build Script
        run: ./build.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: bin/artifacts/

Windows:
  name: Windows Build
  runs-on: windows-latest
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install Dependencies via Chocolatey
      shell: powershell
      run: |
        choco install gitversion.portable -y
        choco install jq -y
        # nuget CLI is no longer needed since we're using dotnet pack

    - name: Run Build Script
      shell: pwsh
      run: ./build.ps1

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: bin\artifacts\