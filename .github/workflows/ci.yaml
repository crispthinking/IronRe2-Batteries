name: Build RE2/cre2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  workflow_call:

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake jq libgtest-dev libbenchmark-dev

      - name: Build Abseil from source
        run: |
          git clone https://github.com/abseil/abseil-cpp.git
          cd abseil-cpp
          git checkout $(cat $GITHUB_WORKSPACE/thirdparty/re2/ABSEIL_REVISION)
          mkdir build && cd build
          cmake .. -DCMAKE_CXX_STANDARD=17 -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=/usr/local
          sudo cmake --build . --parallel $(nproc) --target install

      - name: Run Build Script
        run: ./build.sh
        env:
          CMAKE_PREFIX_PATH: "/usr/local"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-linux
          path: bin/artifacts/

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          brew update
          brew install gitversion nuget
          brew install googletest google-benchmark

      - name: Build Abseil from source
        run: |
          git clone https://github.com/abseil/abseil-cpp.git
          cd abseil-cpp
          # Check out the revision specified in your repository.
          git checkout $(cat $GITHUB_WORKSPACE/thirdparty/re2/ABSEIL_REVISION)
          mkdir build && cd build
          cmake .. \
            -DCMAKE_CXX_STANDARD=17 \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_TESTING=OFF \
            -DCMAKE_INSTALL_PREFIX=/usr/local
          # Use sysctl to get the number of logical CPUs on macOS.
          sudo cmake --build . --parallel $(sysctl -n hw.logicalcpu) --target install

      - name: Run Build Script
        run: ./build.sh
        env:
          CMAKE_PREFIX_PATH: "/usr/local"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-macos
          path: bin/artifacts/


  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install Dependencies
        shell: powershell
        run: |
          choco install gitversion.portable -y
          choco install jq -y
          vcpkg install abseil:x64-windows-static

      - name: Run Build Script
        shell: cmd
        run: build.bat

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-windows
          path: bin/artifacts/
